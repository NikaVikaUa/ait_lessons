*****************************************************************************************************************
Lesson 1

HomeWork
*****************************************************************************************************************
Lesson 2

HomeWork
*****************************************************************************************************************
Lesson 3

HomeWork
*****************************************************************************************************************
Lesson 4

HomeWork
*****************************************************************************************************************
Lesson 5

HomeWork
*****************************************************************************************************************
Lesson 6

HomeWork
*****************************************************************************************************************
Lesson 7

HomeWork
*****************************************************************************************************************
Lesson 8

HomeWork
*****************************************************************************************************************
Lesson 9

HomeWork
*****************************************************************************************************************
Lesson 10

HomeWork
*****************************************************************************************************************
Lesson 11

HomeWork
*****************************************************************************************************************
Lesson 12

HomeWork
*****************************************************************************************************************
Lesson 13

HomeWork
*****************************************************************************************************************
Lesson 14

HomeWork
*****************************************************************************************************************
Lesson 15

HomeWork
*****************************************************************************************************************
Lesson 16

HomeWork
*****************************************************************************************************************
Lesson 17

HomeWork
*****************************************************************************************************************
Lesson 18

HomeWork
*****************************************************************************************************************
Lesson 19

HomeWork
*****************************************************************************************************************
Lesson 20

HomeWork
*****************************************************************************************************************
Lesson 21

HomeWork
*****************************************************************************************************************
Lesson 22

HomeWork

*****************************************************************************************************************
Lesson 23

HomeWork

*****************************************************************************************************************
Lesson 24

HomeWork

*****************************************************************************************************************
Lesson 25

HomeWork
*****************************************************************************************************************
Lesson 26

HomeWork
*****************************************************************************************************************
Lesson 27

HomeWork
*****************************************************************************************************************
Lesson 28

HomeWork

*****************************************************************************************************************
Lesson 29

HomeWork
*****************************************************************************************************************
Lesson 30

HomeWork
*****************************************************************************************************************
Lesson 31

HomeWork

*****************************************************************************************************************
Lesson 32

HomeWork
*****************************************************************************************************************
Lesson 33

HomeWork
*****************************************************************************************************************
Lesson 34

HomeWork
*****************************************************************************************************************
Lesson 35

HomeWork
*****************************************************************************************************************
Lesson 36

HomeWork

*****************************************************************************************************************
Lesson 37

HomeWork

*****************************************************************************************************************
Lesson 38

HomeWork

*****************************************************************************************************************
Lesson 39

HomeWork

*****************************************************************************************************************
Lesson 40

HomeWork

*****************************************************************************************************************
Lesson 41

HomeWork

*****************************************************************************************************************
Lesson 42

HomeWork

*****************************************************************************************************************
Lesson 43

HomeWork

*****************************************************************************************************************
Lesson 44

HomeWork

*****************************************************************************************************************
Lesson 45

HomeWork

Написать метод, который при вводе с клавиатуры дня недели отвечает на вопрос является ли этот день выходным.
     ( для выходного it is true , для рабочего it is false.  Использовать ENUM. День недели вводится со сканера.

     1. Создпть Enum, содержащий дни недели.
     2. Создать обьект сканера
     3. В методе используя константы энума сделать switch, который будет возвращать результат true  или false  
в зависимости
        от введенного со сканера дня недели

     Вариант со звездочкой :
      -разделить решение на отдельные методы, каждый из которых решает свою задачу
     ( например, ввод значения с клавиатуры).
     - проверить что произойдет в случае неверного ввода с клавиатуры и подумать как решить проблему если она 
возникнет

*****************************************************************************************************************
Lesson 46

HomeWork

Есть массив, состоящий из трех видов скобок: (), {}, [] .
    Нужно написать метод, определяющий является ли порядок скобок в массиве корректным
     {}([]) - корректный порядок
     {}([]{()})- корректный порядок
      stack :


     {(] - некорректный порядок
     {}([])} -  некорректный порядок
     {}([])( -  некорректный порядок
     {(})- некорректный порядок

     char[] brackets = {'{', '}'}

*****************************************************************************************************************
Lesson 47

Task1

Написать метод, принимающий упорядоченный лист интов и целое число n  и проверяющий
    есть ли такие 2 числа в листе, что их произведение равно n/
    [1,2,3,4,5 ], 6  ->  true
    [1,2,3,4,5 ], 7  ->  false

Task2

1. Создать новую деку.
    1. Пройти по листу и отфильтровать числа делением N  на это число. Если остаток равен нулю, значит
        потенциально  это один из множителей и мы его добавляем в созданную деку
    2.

      1 , 3 ,6, 9     n = 18

HomeWork

Задача1
Создать мапу с именами в качестве ключей и возрастом в качестве значений. 
Добавить несколько пар ключ-значение в нее и вывести на экран в таком виде : имя : возраст

Задача2
Дана Map<String, String> map. Написать метод, который вернет Мап, такую, 
что если в исходной map есть ключи ‘a’ и ‘b’, то нужно создать новый ключ ‘ab’ с 
суммой значений от ключей a и b. Если нет, ничего не менять Примеры: 
mapAB({"a": "Hi", "b": "There"}) → {"a": "Hi", "ab": "HiThere", "b": "There"} 
mapAB({"a": "Hi"}) → {"a": "Hi"} mapAB({"b": "There"}) → {"b": "There"}
*****************************************************************************************************************
Lesson 48

Task1

Дан маасив строк ( не пустой). Написать метод, принимающий этот массив и возвращающий
    мапу Map<String,Boolean> , где каждая строка является ключом, а значением является
    true  если строка в массиве встречается больше одного раза и false если только один раз.

    Примеры:
    ["a","b","a","c","b"] -> { "a": true, "b":true, "c":false}
    ["a","b","c"] -> { "a": false, "b":false, "c":false}
    ["c","c","c","c"] -> { "c":true}

HomeWork

*****************************************************************************************************************
Lesson 49

Task1

Есть лист имен, где некоторые имена повторяются. Написать метод, который по имени вернет
количество вхождений этого имени в лист.
public nameToNumberOccurence ( List<String> list, String name)   -> 3

HomeWork

*****************************************************************************************************************
Lesson 50

Task1

В ресторан периодически попадает заказ. У заказа есть время когда он был сделан ( milliseconds from 1970 1 Jan)
Для каждого заказа нужно определить количество заказов, сделанных за 15 ( 20, N) минут до него
@param orderTimes - массив отсортированных по времение моментов, когда происходили заказы.
@param minutes
@return для соответствующего заказа - количество заказов, сделанных в предыдущие minutes минут
long[] array = {1000000, 1200000, 1250000,1300000,1600000,1700000,1800000,1850000,1890000};


HomeWork

Написать метод,  который принимает лист имен и их анаграмм и имя , по которому он возвращает лист
всех имеющихся в исходном листе  анаграмм этого имени, включая само имя
[john, nhoj, ann, nan, nhjo, evgeny], john  ->  john,nhoj,nhjo
[john, nhoj, ann, nan, nhjo, evgeny], ann  ->  ann, nan

вначале целесообразно решить для себя более простую задачу - написать метод, определяющий являются ли два словa
анаграммами.
public List<String> findAnagrams(String name, List<String>names){
создать вспомогательную мапу, где ключ - это имя? а значение - это список анаграмм этого имени
Map<String,List<String>> anagrams = new HashMap<>();

*****************************************************************************************************************
Lesson 51

HomeWork

1.Есть класс автомобиль, в котором есть три поля: марка (make), модель (model) , цена (price). Написать метод,
 который принимает
    лист автомобилей, а возвращает TreeMap, ключами которой являются марки автомобилей, а значениями будут
    Treeset автомобилей,  в которых автомобили расположены в лексикографическом порядке относительно модели,
    причем дешевые вперед если модели одинаковые ( необходимо сделать Auto comparable,
    чтобы складывать автомобили в TreeSet  в правильном порядке) Написать тесты.

    2.Написать метод, принимающий лист слов , а возвращающий TreeMap, ключами которого являются буквы,
    а значениями - листы слов, начинающихся с данной буквы и расположенных в алфавитном (лексикографическом)
     порядке
     [hello, world, hell] -> { h: [hell,hello], w:[world]}
     Протестировать

*****************************************************************************************************************
Lesson 52

Task1

Есть массив целых положит  чисел . Найьт элемент если он есть, встречающийся
    в массиве больше половины раз, т.е. больше length/2.
    Если нет , вернуть -1
    2 2 2 2 3 3 3 3

HomeWork

*****************************************************************************************************************
Lesson 53

HomeWork

1. сложить  два числа и получить строку. num1+num2 = num1num2
    2. если длина строки четная  вернуть true  иначе false
    3. вернуть строку в нижнем регистре
    4. если длина строки пять символов вернуть 5 звездочек. Иначе вернуть без изменений
    строку
    5. вывести строку на печать в виде *строка*
    6. напечатать " Hello Java "

*****************************************************************************************************************
Lesson 54

HomeWork

Задача * не обязательная
Написать метод, принимающий строку, содержащую слова разделенные пробелом и два функциональных интерфейса - function and predicate. Метод должен предоставлять возможность реализации следующих действий:

при длине слова= 3, изменить все буквы этого слова на строчные и вернуть измененную строку
при длине слова= 4, изменить все буквы слова на заглавные и вернуть измененную строку
при длине слова= 5, изменить все буквы слова на звездочки и вернуть измененную строку
(т.е. написать лямбду для каждого случая)

*****************************************************************************************************************
Lesson 55

HomeWork

Задача
Дана строка, состоящая из слов, разделенных пробелом. Написать метод, 
позволяющий изменять слова в строке следующим образом:
при длине слова = 3, изменять все буквы слова на заглавные
при длине слова =4, изменять все буквы слова на строчные
при длине слова =5, изменять все буквы слова на звездочки

Сделать 2 варианта решения:

с использованием свойств наследования классов
с использованием интерфейсов.
Протестировать.

*****************************************************************************************************************
Lesson 56

HomeWork

Задача 1
Используя стримы написать метод, принимающий предложение (строку) и букву и возвращающий количество слов, 
начинающихся с этой буквы. Слова в предложении разделены пробелами
Пример: " aaaaaaaaaa adfr gggg brtz a" -> 3

Задача 2
Используя стримы написать метод, проверяющий является ли строка числом ( строковым представлением числа).
Метод принимает строку и возвращает boolean.
Пример: "12345" - true
"abc14" - false

При решении задач Вам могут также понадобиться методы класса String и Character startsWith и isDigit

*****************************************************************************************************************
Lesson 57

HomeWork

Задача1
Написать метод, принимающий список имен, где некоторые имена повторяются, и возвращающий список без повторений.

Задача2
Есть класс Address с полями String street и int houseNumber и класс Person с полями String name, 
int age, Address address.
Написать метод, возвращающий адреса тех, кто старше 17 лет.
List < Address > findAddresses( List< Person > input )

В обоих задачах для решения использовать стримы

*****************************************************************************************************************
Lesson 58

Task1

Написать метод, принимающий лист строк и группирующий их по длине строки. Т.е. метод будет
    возвращать мапу в которой ключами будут длины строк, а занчениями сеты соответствующих
    строк этой длины.

Task2

написать метод , который группирует элементы  листа строк по длине строки >= 4

Task3

написать метод, принмающий лист персонов, и возвращающий мапу, где возраст является ключом а
лист персонов этого возраста значением

Task4

Написать метод, обьединяющий имена из листа стрингов в следующую строку:
name1name2name3

Task5

Написать метод, обьединяющий имена из листа стрингов в следующую строку:
Students:  name1, name2, name3 study Java

HomeWork

Пусть есть класс Person  с полями имя и возраст.
    1. Написать метод, возвращающий общий возраст всех людей старще 17 лет.
    public static int countGeneralAge( List<Person> input)
   
    2. Написать метод, возвращающий имена тех людей, которые являются в Германии совершеннолетними.
    Должна быть возвращена примерно такая строка : in Germany Jack and Bill are of legal age
    String isLegalAge(List<Person> input)
*****************************************************************************************************************
Lesson 59

Task1

Пусть есть класс Person  с переменными  String name  и int salary. Написать
     коллектор , считпющий суммарную зарплату всех сотрудников.

HomeWork

Задача 1
Написать программу, сравнивающую два файла.
Программа должна считывать файлы и затем сравнивать их содержимое( байты).
Если найдено отличие, значит файлы не равны и программа выводит на экран соответствующее сообщение. 
Если конец обоих файлов достигается одновременно и отличий не найдено, значит файлы одинаковые и программа 
также выводит на экран соответствующее сообщение. Предварительно файлы должны быть созданы в корневой директории 
проекта в виде first.txt , second.txt

*****************************************************************************************************************
Lesson 60

HomeWork

Задача 1
Написать метод, читающий текстовый файл и возвращающий строку, состоящую из строчек этого файла, 
разделенных пробелом.

Задача 2
Есть файл такого вида
1
2
3
4
5
Написать метод, принимающий этот файл и возвращающий сумму чисел.

Задача 3
Написать метод, принимающий текстовый файл и находящий самую длинную строку в нем.
Метод возвращает эту строку